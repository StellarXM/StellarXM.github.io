[{"content":"","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"87959536c022772c0c88ea22e89e3291","permalink":"http://techdocs.github.io/1_overview/","publishdate":"2023-05-20T17:20:00Z","title":"Overview"},{"content":"This document describes how to build a documentation website using the following tools on Windows:\nHugo: A site generator, used for generating a local website Git: A distributed version control system, used for cloning Hugo theme resources from GitHub and pushing website resources to GitHub GitHubï¼šAn online project hosting using Git, used for storing website resources and publishing the website to Internet Visual Studio Code: A free code editor built on open source, used for configuring the website and adding or updating site contents using Markdown To be able to complete the tasks, you must have basic knowledge and experience of these tools and you must be comfortable working from the command line.\nIf you are using any other operating system (for example, macOS), follow the instructions in the official sites of each tool and Hugo Guide.\n","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"4f1c34c192da4b341117ae66adc59084","permalink":"http://techdocs.github.io/1_overview/overview/","publishdate":"2023-05-20T17:20:00Z","title":"Overview"},{"content":"","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"f1139f7a292358a86abb9e519be040e0","permalink":"http://techdocs.github.io/2_prepare/","publishdate":"2023-05-20T17:20:00Z","title":"Prepare"},{"content":"Install and Configure Visual Studio Code Download Visual Studio Code (VS Code). Install VS Code with the default settings. Open VS Code. Click Extensions and search \u0026amp;ldquo;markdown\u0026amp;rdquo;. In the search result, find and install the following two plug-ins: Markdown All in One: Markdown assistant tool markdownlint: Markdown style checking and quick fix tool Install Git Prerequisite: The editor (for example, Visual Studio Code) to be used as Git\u0026amp;rsquo;s default editor has been installed.\nDownload a Git package for your OS.\nInstall Git.\nNote: In the Choosing the default editor used by Git step of the installation wizard, choose \u0026amp;ldquo;Use Visual Studio Code as Git\u0026amp;rsquo;s default editor\u0026amp;rdquo;.\n","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"8a567d58e96eae00c5bc4f766e956bc4","permalink":"http://techdocs.github.io/2_prepare/install_required_sw/","publishdate":"2023-05-20T17:20:00Z","title":"Prepare the Required Tools"},{"content":"Plan how you will store the Hugo installation file and your website project. In this document, we will use the following project structure.\n|-hugo\r|-bin\r|-hugo.exe\r|-techdocs.github.io \u0026amp;lt;--Your site directory ","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"854e82c4a1551968592eb78b60a93d61","permalink":"http://techdocs.github.io/2_prepare/plan_directory/","publishdate":"2023-05-20T17:20:00Z","title":"Plan the Project Structure"},{"content":"","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"28e992f6982116c348899916041f9551","permalink":"http://techdocs.github.io/3_installation/","publishdate":"2023-05-20T17:20:00Z","title":"Installation"},{"content":"Hugo extended edition is used for building a documentation website. In this example, Hugo is installed in C:\\hugo\\bin.\nInstall Hugo using a prebuilt binary archive:\nVisit the Hugo latest release page. Scroll down to the Assets section. Find and download the hugo_extended archive for your operating system and architecture (for example, hugo_extended_0.111.3_windows-amd64.zip). Extract the archive. Move the executable (hugo.exe) to your desired directory (for example, C:\\hugo\\bin) Add this directory to the PATH environment variable. Verify that you have execute permission on the file. Consult your operating system documentation if you need help setting file permissions or modifying your PATH environment variable.\nIf you do not see a prebuilt binary for the desired edition, operating system, and architecture, install Hugo using a package manager, Docker, or Build from source. For instructions, see Install Hugo on Windows.\n","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"7a37bfa731b6b17f160a117229856449","permalink":"http://techdocs.github.io/3_installation/install_hugo/","publishdate":"2023-05-20T17:20:00Z","title":"Install Hugo"},{"content":"","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"22483bb638572ac0af506ede833c1316","permalink":"http://techdocs.github.io/4_build-a-website/","publishdate":"2023-05-20T17:20:00Z","title":"Build a Website"},{"content":"Create a Local Website In this example, a new site named techdocs.github.io is created in the C:\\hugo directory.\nOpen a command line tool.\nSome command line tools:\nMicrosoft Visual Studio Code (VS Code): Press CTRL+` to open the command line terminal. Windows Command Prompt PowerShell Git Bash On the command line, create a website using the following command:\nhugo new site hugo/techdocs.github.io The website is created with the following default directories (the directories may vary for different themes):\n|-hugo\r|-bin\r|-hugo.exe\r|-techdocs.github.io \u0026amp;lt;--Your site directory\r|-archetypes\r|-default.md\r|-assets\r|-content \u0026amp;lt;--Your site contents\r|-data\r|-layouts\r|-resources\r|-static \u0026amp;lt;--Static contents (for example, images)\r|-themes \u0026amp;lt;--Themes that can be used by your website\r|-config.toml \u0026amp;lt;--Configuration file of your website The content, static, themes, and config.toml are main directories and files that are used for setting up the website.\nInstall a Hugo Theme for the Website Hugo has many predefined themes. You can choose a theme that matches your requirements best. In this example, the Techdoc theme is used for the website.\nChoose a theme from the Hugo Themes (Tag: docs) page (for example, Techdoc).\nClick the theme to open the theme page (for example, https://themes.gohugo.io/themes/hugo-theme-techdoc/). The theme page shows the instructins on how to use the theme.\nOn the command line, go to the site directory (for example, C:\\hugo\\techdocs.github.io).\ncd C:\\hugo\\techdocs.github.io Initiate a Git repository.\ngit init Add the selected theme to your site directory using one of the following command:\ngit submodule add https://github.com/alex-shpak/hugo-book themes/hugo-book\rgit clone https://github.com/alex-shpak/hugo-book themes/hugo-book If the git operation fails, you can download the ZIP archive from GitHub directly, extract the archive, and place the extracted files to the C:\\hugo\\techdocs.github.io\\themes directory.\n","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"d55e1d568df53ac6156e5679ed49f2a9","permalink":"http://techdocs.github.io/4_build-a-website/build_a_website/","publishdate":"2023-05-20T17:20:00Z","title":"Build a Local Website"},{"content":" In Windows file browser, copy the config.toml file from the C:\\hugo\\techdocs.github.io\\themes\\hugo-theme-techdoc\\exampleSite directory to the C:\\hugo\\techdocs.github.io directory, replacing the existing config.toml file. This only needs to be done once.\nOpen the local website.\nhugo server The command output information Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) shows the web address of the local website.\nOpen http://localhost:1313/ in your web browser.\nConfigure the website to better fulfil your requirements while keeping the website open in your web browser. Your saved changes are reflected in the website timely.\nFor instructions on configuring the Hugo site, see the descriptions of the parameters in the config.toml file or the Hugo Guide.\n","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"2d35d077ea3b15b8b9fcdf627ddd5780","permalink":"http://techdocs.github.io/4_build-a-website/open_the_website/","publishdate":"2023-05-20T17:20:00Z","title":"Open and Configure the Local Website"},{"content":"","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"cb3573b2adb02dbe4a742bce8081f575","permalink":"http://techdocs.github.io/5_add-contents/","publishdate":"2023-05-20T17:20:00Z","title":"Add Contents"},{"content":" Prepare the contents (.md files) for your website. Add the contents to the C:\\hugo\\techdocs.github.io\\content directory. Open the local website to view the changes. For instructions, see Open and Configure the Website. ","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"01f129b1fa944ec905bc92f67bd827c3","permalink":"http://techdocs.github.io/5_add-contents/add_contents/","publishdate":"2023-05-20T17:20:00Z","title":"Add Contents to the Website"},{"content":"","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"8a9fd639ba24ef96572e5dac85524c6a","permalink":"http://techdocs.github.io/6_publish-the-website/","publishdate":"2023-05-20T17:20:00Z","title":"Publish the Website"},{"content":"Create a GitHub Repository Go to GitHub.\nRegister a GitHub account (for example, StellarXM) and log in to GitHub.\nCreate a Git respository in GitHub.\nIn GitHub, click Create repository.\nIn the Create a new repository page, provide the necessary information.\nRepository name*: Provide a unique repository name (for example, techdocs.github.io) Description (optional): Provide a short description for this repository if you deem it necessary Public: This option must be selected to create a public repository. Add a README file: Optional, select this if you need to write a description for your repository Choose a license: If your repository uses resources that are licensed, select the corresponding license. Click Create repository.\nOn the command line, go to the site directory (for example, C:\\hugo\\techdocs.github.io).\nConnect the Git repository with your local project that stores the resources of the website.\ngit remote add origin git@github.com:StellarXM/techdocs.github.io.git ","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"a2d67ed31cc2fa6a4cebe79cb197a99a","permalink":"http://techdocs.github.io/6_publish-the-website/publish_the_website/","publishdate":"2023-05-20T17:20:00Z","title":"Publish the Website to the Internet"},{"content":"Build a Public Documentation Website on Windows This document describes how to build a documentation website using the following tools on Windows:\nHugo: A site generator, used for generating a local website Git: A distributed version control system, used for cloning Hugo theme resources from GitHub and pushing website resources to GitHub GitHubï¼šAn online project hosting using Git, used for storing website resources and publishing the website to Internet Visual Studio Code: A free code editor built on open source, used for configuring the website and adding or updating site contents using Markdown To be able to complete the tasks, you must have basic knowledge and experience of these tools and you must be comfortable working from the command line.\nIf you are using any other operating system (for example, macOS), follow the instructions in the official sites of each tool and Hugo Guide.\n","date":1684603200,"description":"","lastmod":"2023-05-20T17:20:00Z","objectID":"3976528693a0108357f4928017600865","permalink":"http://techdocs.github.io/","publishdate":"2023-05-20T17:20:00Z","title":"Home"}]