<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Hugo Scenario-Based Documentation</title>
    <link>http://StellarXM.github.io/</link>
    <description>Recent content in Home on Hugo Scenario-Based Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 20 May 2023 17:20:00 +0000</lastBuildDate><atom:link href="http://StellarXM.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overview</title>
      <link>http://StellarXM.github.io/1_overview/overview/</link>
      <pubDate>Sat, 20 May 2023 17:20:00 +0000</pubDate>
      
      <guid>http://StellarXM.github.io/1_overview/overview/</guid>
      <description>This document describes how to build a documentation website using the following tools on Windows:
Hugo: A site generator, used for generating a local website Git: A distributed version control system, used for cloning Hugo theme resources from GitHub and pushing website resources to GitHub GitHubï¼šAn online project hosting using Git, used for storing website resources and publishing the website to Internet Visual Studio Code: A free code editor built on open source, used for configuring the website and adding or updating site contents using Markdown To be able to complete the tasks, you must have basic knowledge and experience of these tools and you must be comfortable working from the command line.</description>
    </item>
    
    <item>
      <title>Prepare the Required Tools</title>
      <link>http://StellarXM.github.io/2_prepare/install_required_sw/</link>
      <pubDate>Sat, 20 May 2023 17:20:00 +0000</pubDate>
      
      <guid>http://StellarXM.github.io/2_prepare/install_required_sw/</guid>
      <description>Install and Configure Visual Studio Code Download Visual Studio Code (VS Code). Install VS Code with the default settings. Open VS Code. Click Extensions and search &amp;ldquo;markdown&amp;rdquo;. In the search result, find and install the following two plug-ins: Markdown All in One: Markdown assistant tool markdownlint: Markdown style checking and quick fix tool Install Git Prerequisite: The editor (for example, Visual Studio Code) to be used as Git&amp;rsquo;s default editor has been installed.</description>
    </item>
    
    <item>
      <title>Plan the Project Structure</title>
      <link>http://StellarXM.github.io/2_prepare/plan_directory/</link>
      <pubDate>Sat, 20 May 2023 17:20:00 +0000</pubDate>
      
      <guid>http://StellarXM.github.io/2_prepare/plan_directory/</guid>
      <description>Plan how you will store the Hugo installation file and your website project. In this document, we will use the following project structure.
|-hugo|-bin|-hugo.exe|-techdocs.github.io &amp;lt;--Your site directory </description>
    </item>
    
    <item>
      <title>Add Contents to the Website</title>
      <link>http://StellarXM.github.io/5_add-contents/add_contents/</link>
      <pubDate>Sat, 20 May 2023 17:20:00 +0000</pubDate>
      
      <guid>http://StellarXM.github.io/5_add-contents/add_contents/</guid>
      <description> Prepare the contents (.md files) for your website. Add the contents to the C:\hugo\techdocs.github.io\content directory. Open the local website to view the changes. For instructions, see Open and Configure the Website. </description>
    </item>
    
    <item>
      <title>Build a Local Website</title>
      <link>http://StellarXM.github.io/4_build-a-website/build_a_website/</link>
      <pubDate>Sat, 20 May 2023 17:20:00 +0000</pubDate>
      
      <guid>http://StellarXM.github.io/4_build-a-website/build_a_website/</guid>
      <description>Create a Local Website In this example, a new site named techdocs.github.io is created in the C:\hugo directory.
Open a command line tool.
Some command line tools:
Microsoft Visual Studio Code (VS Code): Press CTRL+` to open the command line terminal. Windows Command Prompt PowerShell Git Bash On the command line, create a website using the following command:
hugo new site hugo/techdocs.github.io The website is created with the following default directories (the directories may vary for different themes):</description>
    </item>
    
    <item>
      <title>Install Hugo</title>
      <link>http://StellarXM.github.io/3_installation/install_hugo/</link>
      <pubDate>Sat, 20 May 2023 17:20:00 +0000</pubDate>
      
      <guid>http://StellarXM.github.io/3_installation/install_hugo/</guid>
      <description>Hugo extended edition is used for building a documentation website. In this example, Hugo is installed in C:\hugo\bin.
Install Hugo using a prebuilt binary archive:
Visit the Hugo latest release page. Scroll down to the Assets section. Find and download the hugo_extended archive for your operating system and architecture (for example, hugo_extended_0.111.3_windows-amd64.zip). Extract the archive. Move the executable (hugo.exe) to your desired directory (for example, C:\hugo\bin) Add this directory to the PATH environment variable.</description>
    </item>
    
    <item>
      <title>Open and Configure the Local Website</title>
      <link>http://StellarXM.github.io/4_build-a-website/open_the_website/</link>
      <pubDate>Sat, 20 May 2023 17:20:00 +0000</pubDate>
      
      <guid>http://StellarXM.github.io/4_build-a-website/open_the_website/</guid>
      <description>In Windows file browser, copy the config.toml file from the C:\hugo\techdocs.github.io\themes\hugo-theme-techdoc\exampleSite directory to the C:\hugo\techdocs.github.io directory, replacing the existing config.toml file. This only needs to be done once.
Open the local website.
hugo server The command output information Web Server is available at http://localhost:1313/ (bind address 127.0.0.1) shows the web address of the local website.
Open http://localhost:1313/ in your web browser.
Configure the website to better fulfil your requirements while keeping the website open in your web browser.</description>
    </item>
    
    <item>
      <title>Publish the Website to the Internet</title>
      <link>http://StellarXM.github.io/6_publish-the-website/publish_the_website/</link>
      <pubDate>Sat, 20 May 2023 17:20:00 +0000</pubDate>
      
      <guid>http://StellarXM.github.io/6_publish-the-website/publish_the_website/</guid>
      <description>Create a GitHub Repository Go to GitHub. Register a unique GitHub account (for example, StellarXM) and log in to GitHub. Create a Git respository in GitHub. In GitHub, click Create repository. In the Create a new repository page, provide the necessary information. Repository name: Provide a unique repository name (for example, StellarXM.github.io). The name of the repository must begin with your GitHub user name (for example, StellarXM) and be followed by .</description>
    </item>
    
  </channel>
</rss>
